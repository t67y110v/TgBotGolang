package app

import (
	. "goBot/internal/delivery/http"
	//. "goBot/internal/modules"
	. "goBot/internal/service"
	. "goBot/repository/textdata"
	"log"
	"strings"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

const (
	commandStart = "start"
	commandOpen  = "open"
	commandClose = "close"
)

func (b *Bot) handlerCommand(message *tgbotapi.Message) {
	switch message.Command() {
	case commandStart:
		tx := "–ü—Ä–∏–≤–µ—Ç! \nT—ã –∏—Å–ø–æ–ª—å–∑—É–µ—à—å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –±–æ—Ç–∞ –¥–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –Ω–∞–≤—ã–∫–∞ –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫–∞!! \n–ù–∞–∂–º–∏\n/open\n–î–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –ø–∞–Ω–µ–ª–∏ –∫–Ω–æ–ø–æ–∫\n "
		Sm(message, b.bot, tx)
	case commandOpen:
		msg := tgbotapi.NewMessage(message.Chat.ID, message.Text)
		msg.ReplyMarkup = NumericKeyboardOpe
		msg.Text = "–ü–∞–Ω–µ–ª—å –∫–æ–º–∞–Ω–¥ –æ—Ç–∫—Ä—ã—Ç–∞!\n –ß—Ç–æ–±—ã –∑–∞–∫—Ä—ã—Ç—å –µ–µ –Ω–∞–ø–∏—à–∏ /close"
		if _, err := b.bot.Send(msg); err != nil {
			log.Panic(err)
		}
	case commandClose:
		msg := tgbotapi.NewMessage(message.Chat.ID, message.Text)
		msg.ReplyMarkup = tgbotapi.NewRemoveKeyboard(true)
		msg.Text = "–ü–∞–Ω–µ–ª—å –∫–æ–º–∞–Ω–¥ –∑–∞–∫—Ä—ã—Ç–∞!\n–ß—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –µ–µ –Ω–∞–ø–∏—à–∏ /open"
		if _, err := b.bot.Send(msg); err != nil {
			log.Panic(err)
		}
	}
	if strings.HasPrefix(message.Command(), "en_") {
		tx := message.Text
		Sm(message, b.bot, GetTask(tx))
	} else if strings.HasPrefix(message.Command(), "ger_") {
		tx := message.Text
		Sm(message, b.bot, GetTask(tx))
	} else if strings.HasPrefix(message.Command(), "tr") {
		tx := "–æ—Ç–∫–∞–∑—ã–≤–∞—Ç—å—Å—è"
		Sm(message, b.bot, tx)
	}

}

func (b *Bot) handlerMessage(message *tgbotapi.Message, update tgbotapi.Update) {
	switch message.Text {
	case "üåç–í –º–µ–Ω—é":
		msg := tgbotapi.NewMessage(message.Chat.ID, message.Text)
		msg.ReplyMarkup = NumericKeyboardOpe
		msg.Text = "–ü–∞–Ω–µ–ª—å –∫–æ–º–∞–Ω–¥ –æ—Ç–∫—Ä—ã—Ç–∞!\n –ß—Ç–æ–±—ã –∑–∞–∫—Ä—ã—Ç—å –µ–µ –Ω–∞–ø–∏—à–∏ /close"
		if _, err := b.bot.Send(msg); err != nil {
			log.Panic(err)
		}
	case "üìù–ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫":
		msg := tgbotapi.NewMessage(message.Chat.ID, message.Text)
		msg.ReplyMarkup = NumericKeyboardEng
		msg.Text = "–ö–æ–º–∞–Ω–¥—ã –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞!\n –ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –Ω–∞–∂–º–∏ \nüåç–í –º–µ–Ω—é"
		if _, err := b.bot.Send(msg); err != nil {
			log.Panic(err)
		}
	case "üìù–ù–µ–º–µ—Ü–∫–∏–µ —è–∑—ã–∫":
		msg := tgbotapi.NewMessage(message.Chat.ID, message.Text)
		msg.ReplyMarkup = NumericKeyboardGer
		msg.Text = "–ö–æ–º–∞–Ω–¥—ã –ù–µ–º–µ—Ü–∫–æ–≥–æ —è–∑—ã–∫–∞!\n –ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –Ω–∞–∂–º–∏ \nüåç–í –º–µ–Ω—é"
		if _, err := b.bot.Send(msg); err != nil {
			log.Panic(err)
		}
	}
	if val, ok := Answ[message.Text]; ok {
		Sm(message, b.bot, val)
	}
	switch message.Text {
	case "üìö–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è":
		tx := `–°–ø—Ä–∞–≤–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –º–æ–¥—É–ª—è–º
	/inf_m1 - —Å–ø—Ä–∞–≤–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –º–æ–¥—É–ª—è
	/inf_m2 - —Å–ø—Ä–∞–≤–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –≤—Ç–æ—Ä–æ–≥–æ –º–æ–¥—É–ª—è
	/inf_m3 - —Å–ø—Ä–∞–≤–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è —Ç—Ä–µ—Ç—å–µ–≥–æ –º–æ–¥—É–ª—è
	/inf_m4 - —Å–ø—Ä–∞–≤–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è —á–µ—Ç–≤–µ—Ä—Ç–æ–≥–æ –º–æ–¥—É–ª—è
	/inf_m5 - —Å–ø—Ä–∞–≤–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø—è—Ç–æ–≥–æ –º–æ–¥—É–ª—è
	/inf_playlists - –ü–ª–µ–π–ª–∏—Å—Ç—ã —Å —Ç–µ–æ—Ä–∏–µ–π –∏ —É–ø—Ä–∞–∂–µ–Ω–Ω–∏—è–º–∏`
		Sm(message, b.bot, tx)
	case "üîé–ö–æ–º–∞–Ω–¥—ã":
		tx := "üìù–ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫ - –∏–∑—É—á–µ–Ω–∏–µ –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞\nüìù–ù–µ–º–µ—Ü–∫–∏–µ —è–∑—ã–∫ - —Å–ø–∏—Å–æ–∫ –º–æ–¥—É–ª–µ–π –Ω–µ–º–µ—Ü–∫–æ–≥–æ —è–∑—ã–∫–∞\nüìö–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è -  —Å–ø–∏—Å–æ–∫ —Å–ø—Ä–∞–≤–æ—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–π –¥–ª—è —É—Å–ø–µ—à–Ω–æ–≥–æ  —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞—á –∏–∑  –º–æ–¥—É–ª–µ–π \nüë•–ü–æ–∏—Å–∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞ - –ø–æ–∏—Å–∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞ –¥–ª—è –ø—Ä–∞–∫—Ç–∏–∫–∏ –æ–±—â–µ–Ω–∏—è\nüìà–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ - –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–≤–æ–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏\n"
		Sm(message, b.bot, tx)
	case "üìù–ù–µ–º–µ—Ü–∫–∏–µ –∑–∞–¥–∞–Ω–∏—è":
		tx := `–ù–µ–º–µ—Ü–∫–∏–π —è–∑—ã–∫
		–ó–∞–¥–∞–Ω–∏—è –ø–µ—Ä–≤–æ–≥–æ –º–æ–¥—É–ª—è : –ø–æ–¥–æ–±—Ä–∞—Ç—å —Ä—É—Å—Å–∫–∏–π —ç–∫–≤–∏–≤–∞–ª–µ–Ω—Ç
		/ger_m1_task1
		/ger_m1_task2
		/ger_m1_task3
		–ó–∞–¥–∞–Ω–∏—è –≤—Ç–æ—Ä–æ–≥–æ –º–æ–¥—É–ª—è : –ø–µ—Ä–µ–≤–µ–¥–∏—Ç–µ –≤—ã–¥–µ–ª–µ–Ω–Ω–æ–µ —Å–ª–æ–≤–æ
		/ger_m2_task1
		/ger_m2_task2
		/ger_m2_task3
		/ger_m2_task4
		–ó–∞–¥–∞–Ω–∏—è —Ç—Ä–µ—Ç—å–µ–≥–æ –º–æ–¥—É–ª—è : –ø–µ—Ä–µ–≤–æ–¥ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ä–µ—á–µ–≤–æ–π –∫–æ–º–ø—Ä–µ—Å—Å–∏–∏
		/ger_m3_task1
		/ger_m3_task2
		/ger_m3_task3
		–ó–∞–¥–∞–Ω–∏—è —á–µ—Ç–≤–µ—Ä—Ç–æ–≥–æ  –º–æ–¥—É–ª—è : –∑–∞–ø–æ–ª–Ω–∏—Ç—å –ø—Ä–æ–ø—É—Å–∫ –ø–æ–¥—Ö–æ–¥—è—â–∏–º —Å–ª–æ–≤–æ–º(—Å–ª–æ–≤–∞–º–∏), –ø–æ—Å—Ç–∞–≤–∏–≤ –∏—Ö –≤ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ñ–æ—Ä–º—É
		ger_m4_task1
		/ger_m4_task2
		/ger_m4_task3
		–ó–∞–¥–∞–Ω–∏—è –ø—è—Ç–æ–≥–æ –º–æ–¥—É–ª—è : –ø–µ—Ä–µ–≤–µ–¥–∏—Ç–µ –≤—ã–¥–µ–ª–µ–Ω–Ω–æ–µ —Å–ª–æ–≤–æ
		/ger_m5_task1
		/ger_m5_task2
		/ger_m5_task3
		–ó–∞–¥–∞–Ω–∏—è –æ–±—â–µ–≥–æ –º–æ–¥—É–ª—è, –¥–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏–∏ - –¢–∞–±–ª–∏—Ü–∞ –®—É–ª—å—Ç–µ:
		–º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –±—ã—Å—Ç—Ä–æ —Å–æ—Å—á–∏—Ç–∞—Ç—å –ø–æ –∫–≤–∞–¥—Ä–∞—Ç–∞–º –æ—Ç 1 –¥–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —á–∏—Å–ª–∞
		/m_task1
		/m_task2
		/m_task3
		/m_task4 `
		Sm(message, b.bot, tx)
	case "üìù–ê–Ω–≥–ª–∏–π—Å–∫–∏–µ –∑–∞–¥–∞–Ω–∏—è":
		tx := `–ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫
		–ó–∞–¥–∞–Ω–∏—è –ø–µ—Ä–≤–æ–≥–æ –º–æ–¥—É–ª—è : –ø–µ—Ä–µ–≤–µ–¥–∏—Ç–µ —Ñ—Ä–∞–∑–µ–æ–ª–æ–≥–∏–∑–º
		/en_m1_task1
		/en_m1_task2
		/en_m1_task3
		–ó–∞–¥–∞–Ω–∏—è –≤—Ç–æ—Ä–æ–≥–æ –º–æ–¥—É–ª—è : –ø–µ—Ä–µ–≤–æ–¥ —Å–ª–æ–≤–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
		/en_m2_task1
		/en_m2_task2
		/en_m2_task3
		/en_m2_task4
		–ó–∞–¥–∞–Ω–∏—è —Ç—Ä–µ—Ç—å–µ–≥–æ –º–æ–¥—É–ª—è : –µ—Ä–µ–≤–æ–¥ —Ñ—Ä–∞–∑—ã –æ–¥–Ω–∏–º —Å–ª–æ–≤–æ–º
		/en_m3_task1
		/en_m3_task2
		/en_m3_task3
		–ó–∞–¥–∞–Ω–∏—è —á–µ—Ç–≤–µ—Ä—Ç–æ–≥–æ  –º–æ–¥—É–ª—è : –≤—Å—Ç–∞–≤–∏—Ç—å –ø–æ–¥—Ö–æ–¥—è—â–µ–µ –ø–æ —Å–º—ã—Å–ª—É —Å–ª–æ–≤–æ
		/en_m4_task1
		/en_m4_task2
		/en_m4_task3
		–ó–∞–¥–∞–Ω–∏—è –ø—è—Ç–æ–≥–æ –º–æ–¥—É–ª—è : –ø–µ—Ä–µ–≤–æ–¥ —Ñ—Ä–∞–∑—ã –Ω–µ –Ω–∞—Ä—É—à–∞—è –ª–µ–∫—Å–∏—á–µ—Å–∫—É—é —Å–æ—á–µ—Ç–∞–µ–º–æ—Å—Ç—å
		/en_m5_task1
		/en_m5_task2
		/en_m5_task3
		–ó–∞–¥–∞–Ω–∏—è –æ–±—â–µ–≥–æ –º–æ–¥—É–ª—è, –¥–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏–∏ - –¢–∞–±–ª–∏—Ü–∞ –®—É–ª—å—Ç–µ:
		–º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –±—ã—Å—Ç—Ä–æ —Å–æ—Å—á–∏—Ç–∞—Ç—å –ø–æ –∫–≤–∞–¥—Ä–∞—Ç–∞–º –æ—Ç 1 –¥–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —á–∏—Å–ª–∞
		/m_task1
		/m_task2
		/m_task3
		/m_task4`
		Sm(message, b.bot, tx)
	case "üéß–ê–Ω–≥–ª–∏–π—Å–∫–∞—è —Ä–µ—á—å":
		SendAu(update, b.bot)
	}
}
